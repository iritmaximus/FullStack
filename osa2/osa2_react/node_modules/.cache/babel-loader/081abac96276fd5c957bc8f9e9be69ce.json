{"ast":null,"code":"var _jsxFileName = \"/home/martti/Documents/FullStack/osa2/osa2_react/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Note from './components/Note';\nimport noteService from './services/notes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = props => {\n  _s();\n\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState('A new note...');\n  const [showAll, setShowAll] = useState(true);\n  useEffect(() => {\n    noteService.getAll().then(response => {\n      setNotes(response.data);\n    });\n  }, []);\n\n  const toggleImportanceOf = id => {\n    const note = notes.find(n => n.id === id);\n    const changedNote = { ...note,\n      important: !note.important\n    };\n    noteService.update(id, changedNote).then(response => {\n      setNotes(notes.map(note => note.id !== id ? note : response.data));\n    });\n  };\n\n  const addNote = event => {\n    event.preventDefault();\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5\n    };\n    noteService.create(noteObject).then(response => {\n      setNotes(notes.concat(response.data));\n      setNewNote('');\n    });\n  };\n\n  const handleNoteChange = event => {\n    console.log(event.target.value);\n    setNewNote(event.target.value);\n  };\n\n  const notesToShow = showAll ? notes : notes.filter(note => note.important === true);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Notes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowAll(!showAll),\n        children: [\"Show \", showAll ? 'important' : 'all']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: notesToShow.map(note => /*#__PURE__*/_jsxDEV(Note, {\n          note: note,\n          toggleImportance: () => toggleImportanceOf(note.id)\n        }, note.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this))\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addNote,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: newNote,\n        onChange: handleNoteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"JRNMa7XlzhNmlubM2gxwbqOaXto=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/martti/Documents/FullStack/osa2/osa2_react/src/App.js"],"names":["React","useEffect","useState","Note","noteService","App","props","notes","setNotes","newNote","setNewNote","showAll","setShowAll","getAll","then","response","data","toggleImportanceOf","id","note","find","n","changedNote","important","update","map","addNote","event","preventDefault","noteObject","content","date","Date","toISOString","Math","random","create","concat","handleNoteChange","console","log","target","value","notesToShow","filter"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport Note from './components/Note'\nimport noteService from './services/notes'\n\nconst App = (props) => {  \n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState('A new note...')\n  const [showAll, setShowAll] = useState(true)\n\n\n  useEffect(() => {\n    noteService\n      .getAll()      \n      .then(response => {        \n        setNotes(response.data)      \n      })  \n  }, [])\n\n  const toggleImportanceOf = id => {\n    const note = notes.find(n => n.id === id)\n    const changedNote = { ...note, important: !note.important }\n\n    noteService      \n    .update(id, changedNote)      \n    .then(response => {        \n      setNotes(notes.map(note => note.id !== id ? note : response.data))\n    })  \n  }\n\n  const addNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5\n    }\n\n    noteService      \n    .create(noteObject)      \n    .then(response => {        \n      setNotes(notes.concat(response.data))        \n      setNewNote('')      \n    })  \n  }\n  \n  \n\n   \n\n  const handleNoteChange = (event) => {\n    console.log(event.target.value)\n    setNewNote(event.target.value)\n  }\n\n  const notesToShow = showAll\n    ? notes\n    : notes.filter(note => note.important === true)\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          Show {showAll ? 'important' : 'all'}\n        </button>\n      </div>\n      <ul>\n        <>\n          {notesToShow.map(note => \n            <Note \n            key={note.id} \n            note={note} \n            toggleImportance={() => toggleImportanceOf(note.id)}/>\n          )}\n        </>\n      </ul>\n      <form onSubmit={addNote}>\n        <input \n        value={newNote}\n        onChange={handleNoteChange}\n        />\n        <button type='submit'>Save</button>\n      </form>\n    </div>\n  )\n}\n\nexport default App "]},"metadata":{},"sourceType":"module"}