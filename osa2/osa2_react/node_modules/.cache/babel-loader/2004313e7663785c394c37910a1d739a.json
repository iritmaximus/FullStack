{"ast":null,"code":"var _jsxFileName = \"/home/martti/Documents/FullStack/osa2/osa2_react/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Note from './components/Note';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = props => {\n  _s();\n\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState('A new note...');\n  const [showAll, setShowAll] = useState(true);\n  console.log('Render', notes.length, 'notes.');\n\n  const addNote = event => {\n    event.preventDefault();\n    console.log('Button clicked!', event.target);\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5,\n      id: notes.length + 1\n    };\n    setNotes(notes.concat(noteObject));\n    setNewNote('');\n  };\n\n  useEffect(() => {\n    console.log('Effect');\n    axios.get('http://localhost:3001/notes', noteObject).then(response => {\n      console.log(response);\n    });\n  }, []);\n\n  const handleNoteChange = event => {\n    console.log(event.target.value);\n    setNewNote(event.target.value);\n  };\n\n  const notesToShow = showAll ? notes : notes.filter(note => note.important === true);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Notes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowAll(!showAll),\n        children: [\"Show \", showAll ? 'important' : 'all']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: notesToShow.map(note => /*#__PURE__*/_jsxDEV(Note, {\n          note: note\n        }, note.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this))\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addNote,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: newNote,\n        onChange: handleNoteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"JRNMa7XlzhNmlubM2gxwbqOaXto=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/martti/Documents/FullStack/osa2/osa2_react/src/App.js"],"names":["React","useEffect","useState","Note","axios","App","props","notes","setNotes","newNote","setNewNote","showAll","setShowAll","console","log","length","addNote","event","preventDefault","target","noteObject","content","date","Date","toISOString","important","Math","random","id","concat","get","then","response","handleNoteChange","value","notesToShow","filter","note","map"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport Note from './components/Note'\nimport axios from 'axios'\n\nconst App = (props) => {  \n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState('A new note...')\n  const [showAll, setShowAll] = useState(true)\n\n  \n  \n  console.log('Render', notes.length, 'notes.')\n  \n  const addNote = (event) => {\n    event.preventDefault()\n    console.log('Button clicked!', event.target)\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5,\n      id : notes.length + 1,\n    }  \n    setNotes(notes.concat(noteObject))\n    setNewNote('')\n  }\n    \n  useEffect(() => {\n  console.log('Effect')\n  axios\n    .get('http://localhost:3001/notes', noteObject)\n    .then(response => {\n      console.log(response)\n    })\n  }, [])\n\n   \n\n  const handleNoteChange = (event) => {\n    console.log(event.target.value)\n    setNewNote(event.target.value)\n  }\n\n  const notesToShow = showAll\n    ? notes\n    : notes.filter(note => note.important === true)\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          Show {showAll ? 'important' : 'all'}\n        </button>\n      </div>\n      <ul>\n        <>\n          {notesToShow.map(note => \n            <Note key={note.id} note={note} />\n          )}\n        </>\n      </ul>\n      <form onSubmit={addNote}>\n        <input \n        value={newNote}\n        onChange={handleNoteChange}\n        />\n        <button type='submit'>Save</button>\n      </form>\n    </div>\n  )\n}\n\nexport default App "]},"metadata":{},"sourceType":"module"}