{"ast":null,"code":"var _jsxFileName = \"/home/martti/Documents/FullStack/osa2/osa2_react/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Countries = ({\n  countries\n}) => {\n  const Country = ({\n    country,\n    singleCountry\n  }) => {\n    if (singleCountry) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: country.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [country.capital, \" \\\\n\", country.population]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: country.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 7\n      }, this);\n    }\n  };\n\n  if (countries.length > 10) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Too many matches, specify another filter.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this);\n  } else if (countries.length === 1) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: countries.map(country => /*#__PURE__*/_jsxDEV(Country, {\n        country: country,\n        singleCountry: true\n      }, country.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this))\n    }, void 0, false);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: countries.map(country => /*#__PURE__*/_jsxDEV(Country, {\n        country: country,\n        singeCountry: false\n      }, country.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_c = Countries;\n\nconst App = () => {\n  _s();\n\n  const [countries, setCountries] = useState([]);\n  const [newFilter, setNewFilter] = useState('');\n  const [showAll, setShowAll] = useState(true);\n  useEffect(() => {\n    console.log('Pending...');\n    axios.get('https://restcountries.eu/rest/v2/all').then(response => {\n      setCountries(response.data);\n      console.log('Promise fulfilled!');\n    });\n  }, []);\n  console.log('Rendering', countries.length, 'countries.');\n\n  const handleFilter = event => {\n    console.log('Event:', event.target.value);\n    setNewFilter(event.target.value);\n\n    if (newFilter !== '') {\n      setShowAll(false);\n    }\n  };\n\n  const filteredCountries = showAll ? countries : countries.filter(country => country.name.toLowerCase().includes(newFilter.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Find countries:\", /*#__PURE__*/_jsxDEV(\"input\", {\n      value: newFilter,\n      onChange: handleFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Countries, {\n      countries: filteredCountries\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"YrxbITqMnqu9jzXz0Lbje9HrKO8=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Countries\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/home/martti/Documents/FullStack/osa2/osa2_react/src/App.js"],"names":["React","useState","useEffect","axios","Countries","countries","Country","country","singleCountry","name","capital","population","length","map","App","setCountries","newFilter","setNewFilter","showAll","setShowAll","console","log","get","then","response","data","handleFilter","event","target","value","filteredCountries","filter","toLowerCase","includes"],"mappings":"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","sourcesContent":["import React, { useState, useEffect} from 'react'\nimport axios from 'axios'\n\n\n\nconst Countries = ({ countries }) => {\n\n  const Country = ({ country, singleCountry }) => {\n    if (singleCountry) {\n      return (\n        <div>\n          <h1>{country.name}</h1>\n\n          <p>\n            {country.capital} \\n\n            {country.population}\n          </p>\n        </div>\n      )\n    } else {\n      return (\n      <div>\n        {country.name}\n      </div>\n      )\n    }\n    \n  }\n\n\n  if (countries.length > 10) {\n    return (\n      <div>\n        Too many matches, specify another filter.\n      </div>\n    )\n  } else if (countries.length === 1) {\n    return (\n      <>\n        {countries.map(country => \n          <Country \n          country={country} \n          key={country.name} \n          singleCountry={true}/>)\n        }\n      </>\n    )\n  } else {\n    return (\n      <div>\n        {countries.map(country => \n          <Country \n          country={country} \n          key={country.name}\n          singeCountry={false} />)\n        }\n      </div>\n    )\n  }\n  \n  \n} \n\n\nconst App = () => {\n\n  const [ countries, setCountries ] = useState([])\n  const [ newFilter, setNewFilter ] = useState('')\n  const [ showAll, setShowAll ] = useState(true)\n\n  useEffect(() => {\n    console.log('Pending...')\n\n    axios\n      .get('https://restcountries.eu/rest/v2/all')\n      .then(response => {\n        setCountries(response.data)\n        console.log('Promise fulfilled!')\n      })\n  }, [])\n\n  console.log('Rendering', countries.length, 'countries.')\n\n  const handleFilter = (event) => {\n    console.log('Event:', event.target.value)\n    setNewFilter(event.target.value)\n\n    if (newFilter !== '') {\n      setShowAll(false)\n    }\n    \n    \n  }\n\n  const filteredCountries = showAll \n    ? countries \n    : countries.filter(country => country.name.toLowerCase().includes(newFilter.toLowerCase()))\n\n\n  return (\n    <div>\n      Find countries: \n      <input \n      value={newFilter}\n      onChange={handleFilter}\n      />\n\n      <Countries countries={filteredCountries}/>\n      \n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}