{"ast":null,"code":"var _jsxFileName = \"/home/martti/Documents/FullStack/osa2/osa2_react/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Countries = ({\n  countries\n}) => {\n  const Country = ({\n    country\n  }) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: country.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this);\n  };\n\n  if (countries.length > 10) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Too many matches, specify another filter.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: countries.map(country => /*#__PURE__*/_jsxDEV(Country, {\n        country: country\n      }, country.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 33\n      }, this))\n    }, void 0, false);\n  }\n};\n\n_c = Countries;\n\nconst App = () => {\n  _s();\n\n  const [countries, setCountries] = useState([]);\n  const [newFilter, setNewFilter] = useState('');\n  const [shownCountries, setShownCountries] = useState([]);\n  useEffect(() => {\n    console.log('Pending...');\n    axios.get('https://restcountries.eu/rest/v2/all').then(response => {\n      setCountries(response.data);\n      console.log('Promise fulfilled!');\n    });\n  }, []);\n\n  const handleFilter = event => {\n    console.log('Event:', event.target.value);\n    setNewFilter(event.target.value);\n    console.log('newFilter:', newFilter);\n    filterCountries();\n  };\n\n  const filterCountries = () => {\n    const filteredCountries = countries.filter(country => country.name.includes(newFilter));\n    console.log('Filtered Countries:', shownCountries);\n    setShownCountries(filteredCountries);\n    console.log('Shown countries:', shownCountries);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Find countries:\", /*#__PURE__*/_jsxDEV(\"input\", {\n      value: newFilter,\n      onChange: handleFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Countries, {\n      countries: shownCountries\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"Gx2QL+GiAAnbDTJyI0MlytUGG+c=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Countries\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/home/martti/Documents/FullStack/osa2/osa2_react/src/App.js"],"names":["React","useState","useEffect","axios","Countries","countries","Country","country","name","length","map","App","setCountries","newFilter","setNewFilter","shownCountries","setShownCountries","console","log","get","then","response","data","handleFilter","event","target","value","filterCountries","filteredCountries","filter","includes"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;AAIA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAmB;AAEnC,QAAMC,OAAO,GAAG,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAiB;AAC/B,wBACE;AAAA,gBACGA,OAAO,CAACC;AADX;AAAA;AAAA;AAAA;AAAA,YADF;AAKD,GAND;;AASA,MAAIH,SAAS,CAACI,MAAV,GAAmB,EAAvB,EAA2B;AACzB,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAKD,GAND,MAMO;AACL,wBACA;AAAA,gBACGJ,SAAS,CAACK,GAAV,CAAcH,OAAO,iBAAI,QAAC,OAAD;AAAS,QAAA,OAAO,EAAEA;AAAlB,SAAgCA,OAAO,CAACC,IAAxC;AAAA;AAAA;AAAA;AAAA,cAAzB;AADH,qBADA;AAKD;AACF,CAxBD;;KAAMJ,S;;AA2BN,MAAMO,GAAG,GAAG,MAAM;AAAA;;AAEhB,QAAM,CAAEN,SAAF,EAAaO,YAAb,IAA8BX,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAAEY,SAAF,EAAaC,YAAb,IAA8Bb,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAAEc,cAAF,EAAkBC,iBAAlB,IAAuCf,QAAQ,CAAC,EAAD,CAArD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AAEAf,IAAAA,KAAK,CACFgB,GADH,CACO,sCADP,EAEGC,IAFH,CAEQC,QAAQ,IAAI;AAChBT,MAAAA,YAAY,CAACS,QAAQ,CAACC,IAAV,CAAZ;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACD,KALH;AAMD,GATQ,EASN,EATM,CAAT;;AAWA,QAAMK,YAAY,GAAIC,KAAD,IAAW;AAC9BP,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBM,KAAK,CAACC,MAAN,CAAaC,KAAnC;AACAZ,IAAAA,YAAY,CAACU,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAZ;AACAT,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BL,SAA1B;AACAc,IAAAA,eAAe;AAGhB,GAPD;;AASA,QAAMA,eAAe,GAAG,MAAM;AAC5B,UAAMC,iBAAiB,GAAIvB,SAAS,CAACwB,MAAV,CAAiBtB,OAAO,IAAIA,OAAO,CAACC,IAAR,CAAasB,QAAb,CAAsBjB,SAAtB,CAA5B,CAA3B;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCH,cAAnC;AAEAC,IAAAA,iBAAiB,CAACY,iBAAD,CAAjB;AACAX,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCH,cAAhC;AACD,GAND;;AASA,sBACE;AAAA,+CAEE;AACA,MAAA,KAAK,EAAEF,SADP;AAEA,MAAA,QAAQ,EAAEU;AAFV;AAAA;AAAA;AAAA;AAAA,YAFF,eAOE,QAAC,SAAD;AAAW,MAAA,SAAS,EAAER;AAAtB;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CA/CD;;GAAMJ,G;;MAAAA,G;AAiDN,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect} from 'react'\nimport axios from 'axios'\n\n\n\nconst Countries = ({ countries }) => {\n\n  const Country = ({ country }) => {\n    return (\n      <div>\n        {country.name}\n      </div>\n    )\n  }\n\n\n  if (countries.length > 10) {\n    return (\n      <div>\n        Too many matches, specify another filter.\n      </div>\n    )\n  } else {\n    return (\n    <>\n      {countries.map(country => <Country country={country} key={country.name}/>)}\n    </>\n  )\n  }\n} \n\n\nconst App = () => {\n\n  const [ countries, setCountries ] = useState([])\n  const [ newFilter, setNewFilter ] = useState('')\n  const [ shownCountries, setShownCountries] = useState([])\n\n  useEffect(() => {\n    console.log('Pending...')\n\n    axios\n      .get('https://restcountries.eu/rest/v2/all')\n      .then(response => {\n        setCountries(response.data)\n        console.log('Promise fulfilled!')\n      })\n  }, [])\n\n  const handleFilter = (event) => {\n    console.log('Event:', event.target.value)\n    setNewFilter(event.target.value)\n    console.log('newFilter:', newFilter)\n    filterCountries()\n\n    \n  }\n\n  const filterCountries = () => {\n    const filteredCountries = (countries.filter(country => country.name.includes(newFilter)))\n    console.log('Filtered Countries:', shownCountries)\n\n    setShownCountries(filteredCountries)\n    console.log('Shown countries:', shownCountries)\n  }\n  \n\n  return (\n    <div>\n      Find countries: \n      <input \n      value={newFilter}\n      onChange={handleFilter}\n      />\n\n      <Countries countries={shownCountries}/>\n      \n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}