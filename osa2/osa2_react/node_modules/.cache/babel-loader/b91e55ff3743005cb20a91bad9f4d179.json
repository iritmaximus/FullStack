{"ast":null,"code":"var _jsxFileName = \"/home/martti/Documents/FullStack/osa2/osa2_react/src/components/Countries.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Countries = ({\n  countries,\n  setNewFilter\n}) => {\n  const Country = ({\n    country,\n    singleCountry,\n    setNewFilter\n  }) => {\n    s;\n\n    if (singleCountry) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: country.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Capital: \", country.capital, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 13\n          }, this), \"Population: \", country.population]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Languages\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: country.languages.map(language => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: language.name\n          }, language.name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: country.flag,\n          alt: \"Country's flag\",\n          width: \"170\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [country.name, /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"button\",\n          name: country.name,\n          value: \"Show\",\n          onClick: () => console.log('Button pressed.', country.name) || setNewFilter(country.name)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 5\n      }, this);\n    }\n  };\n\n  if (countries.length > 10) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Too many matches, specify another filter.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this);\n  } else if (countries.length === 1) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: countries.map(country => /*#__PURE__*/_jsxDEV(Country, {\n        country: country,\n        singleCountry: true,\n        setNewFilter: setNewFilter\n      }, country.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this))\n    }, void 0, false);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: countries.map(country => /*#__PURE__*/_jsxDEV(Country, {\n        country: country,\n        singeCountry: false,\n        setNewFilter: setNewFilter\n      }, country.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_c = Countries;\nexport default Countries;\n\nvar _c;\n\n$RefreshReg$(_c, \"Countries\");","map":{"version":3,"sources":["/home/martti/Documents/FullStack/osa2/osa2_react/src/components/Countries.js"],"names":["Countries","countries","setNewFilter","Country","country","singleCountry","s","name","capital","population","languages","map","language","flag","console","log","length"],"mappings":";;;;AAAA,MAAMA,SAAS,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAD,KAAiC;AAEjD,QAAMC,OAAO,GAAG,CAAC;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,aAAX;AAA0BH,IAAAA;AAA1B,GAAD,KAA8C;AAACI,IAAAA,CAAC;;AAG9D,QAAID,aAAJ,EAAmB;AACjB,0BACE;AAAA,gCACE;AAAA,oBAAKD,OAAO,CAACG;AAAb;AAAA;AAAA;AAAA;AAAA,gBADF,eAGE;AAAA,kCACYH,OAAO,CAACI,OADpB,eAEE;AAAA;AAAA;AAAA;AAAA,kBAFF,kBAGeJ,OAAO,CAACK,UAHvB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATF,eAUE;AAAA,oBACGL,OAAO,CAACM,SAAR,CAAkBC,GAAlB,CAAsBC,QAAQ,iBAC7B;AAAA,sBAAyBA,QAAQ,CAACL;AAAlC,aAASK,QAAQ,CAACL,IAAlB;AAAA;AAAA;AAAA;AAAA,kBADD;AADH;AAAA;AAAA;AAAA;AAAA,gBAVF,eAcE;AACA,UAAA,GAAG,EAAEH,OAAO,CAACS,IADb;AAEA,UAAA,GAAG,EAAC,gBAFJ;AAGA,UAAA,KAAK,EAAC;AAHN;AAAA;AAAA;AAAA;AAAA,gBAdF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAsBD,KAvBD,MAuBO;AACL,0BACF;AAAA,mBACGT,OAAO,CAACG,IADX,eAGE;AACA,UAAA,IAAI,EAAC,QADL;AAEA,UAAA,IAAI,EAAEH,OAAO,CAACG,IAFd;AAGA,UAAA,KAAK,EAAC,MAHN;AAIA,UAAA,OAAO,EAAE,MACPO,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BX,OAAO,CAACG,IAAvC,KACGL,YAAY,CAACE,OAAO,CAACG,IAAT;AANjB;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cADE;AAaD;AAEF,GA1CD;;AA6CA,MAAIN,SAAS,CAACe,MAAV,GAAmB,EAAvB,EAA2B;AACzB,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAKD,GAND,MAMO,IAAIf,SAAS,CAACe,MAAV,KAAqB,CAAzB,EAA4B;AACjC,wBACE;AAAA,gBACGf,SAAS,CAACU,GAAV,CAAcP,OAAO,iBACpB,QAAC,OAAD;AACA,QAAA,OAAO,EAAEA,OADT;AAGA,QAAA,aAAa,EAAE,IAHf;AAIA,QAAA,YAAY,EAAEF;AAJd,SAEKE,OAAO,CAACG,IAFb;AAAA;AAAA;AAAA;AAAA,cADD;AADH,qBADF;AAYD,GAbM,MAaA;AACL,wBACE;AAAA,gBACGN,SAAS,CAACU,GAAV,CAAcP,OAAO,iBACpB,QAAC,OAAD;AACA,QAAA,OAAO,EAAEA,OADT;AAGA,QAAA,YAAY,EAAE,KAHd;AAIA,QAAA,YAAY,EAAEF;AAJd,SAEKE,OAAO,CAACG,IAFb;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAWD;AACF,CA/ED;;KAAMP,S;AAiFN,eAAeA,SAAf","sourcesContent":["const Countries = ({ countries, setNewFilter }) => {\n\n  const Country = ({ country, singleCountry, setNewFilter }) => {s\n\n\n    if (singleCountry) {\n      return (\n        <div>\n          <h1>{country.name}</h1>\n\n          <p>\n            Capital: {country.capital}\n            <br></br>\n            Population: {country.population}\n          </p>\n\n          <h2>Languages</h2>\n          <ul>\n            {country.languages.map(language => \n              <li key={language.name}>{language.name}</li>)}\n          </ul>\n          <img \n          src={country.flag} \n          alt=\"Country's flag\"\n          width='170'\n          ></img>\n        </div>\n      )\n    } else {\n      return (\n    <div>\n      {country.name}\n\n      <input\n      type='button'\n      name={country.name}\n      value='Show'\n      onClick={() => \n        console.log('Button pressed.', country.name) \n        || setNewFilter(country.name)}/>\n    </div>\n      )\n    }\n    \n  }\n\n\n  if (countries.length > 10) {\n    return (\n      <div>\n        Too many matches, specify another filter.\n      </div>\n    )\n  } else if (countries.length === 1) {\n    return (\n      <>\n        {countries.map(country => \n          <Country \n          country={country} \n          key={country.name} \n          singleCountry={true}\n          setNewFilter={setNewFilter}\n          />)\n        }\n      </>\n    )\n  } else {\n    return (\n      <div>\n        {countries.map(country => \n          <Country \n          country={country} \n          key={country.name}\n          singeCountry={false} \n          setNewFilter={setNewFilter}/>)\n        }\n      </div>\n    )\n  }\n} \n\nexport default Countries"]},"metadata":{},"sourceType":"module"}