{"ast":null,"code":"var _jsxFileName = \"/home/martti/Documents/FullStack/osa2/osa2_react/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Countries = ({\n  countries,\n  setNewFilter\n}) => {\n  const Country = ({\n    country,\n    singleCountry,\n    setNewFilter\n  }) => {\n    const filterCountries = ({\n      country\n    }) => {\n      console.log('Country:', country);\n      setNewFilter(country.name);\n      console.log('Filter set to', country.name);\n    };\n\n    if (singleCountry) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: country.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Capital: \", country.capital, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this), \"Population: \", country.population]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Languages\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: country.languages.map(language => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: language.name\n          }, language.name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: country.flag,\n          alt: \"Country's flag\",\n          width: \"170\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [country.name, /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"button\",\n          name: country.name,\n          value: \"Show\",\n          onClick: () => console.log('Button pressed.', country.name) || filterCountries(country)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 5\n      }, this);\n    }\n  };\n\n  if (countries.length > 10) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Too many matches, specify another filter.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this);\n  } else if (countries.length === 1) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: countries.map(country => /*#__PURE__*/_jsxDEV(Country, {\n        country: country,\n        singleCountry: true,\n        setNewFilter: setNewFilter\n      }, country.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this))\n    }, void 0, false);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: countries.map(country => /*#__PURE__*/_jsxDEV(Country, {\n        country: country,\n        singeCountry: false\n      }, country.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_c = Countries;\n\nconst App = () => {\n  _s();\n\n  const [countries, setCountries] = useState([]);\n  const [newFilter, setNewFilter] = useState('');\n  const [showAll, setShowAll] = useState(true);\n  useEffect(() => {\n    console.log('Pending...');\n    axios.get('https://restcountries.eu/rest/v2/all').then(response => {\n      setCountries(response.data);\n      console.log('Promise fulfilled!');\n    });\n  }, []);\n  console.log('Rendering', countries.length, 'countries.');\n\n  const handleFilter = event => {\n    console.log('Event:', event.target.value);\n    setNewFilter(event.target.value);\n\n    if (newFilter !== '') {\n      setShowAll(false);\n    }\n  };\n\n  const filteredCountries = showAll ? countries : countries.filter(country => country.name.toLowerCase().includes(newFilter.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Find countries:\", /*#__PURE__*/_jsxDEV(\"input\", {\n      value: newFilter,\n      onChange: handleFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Countries, {\n      countries: filteredCountries,\n      setNewFilter: setNewFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"YrxbITqMnqu9jzXz0Lbje9HrKO8=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Countries\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/home/martti/Documents/FullStack/osa2/osa2_react/src/App.js"],"names":["React","useState","useEffect","axios","Countries","countries","setNewFilter","Country","country","singleCountry","filterCountries","console","log","name","capital","population","languages","map","language","flag","length","App","setCountries","newFilter","showAll","setShowAll","get","then","response","data","handleFilter","event","target","value","filteredCountries","filter","toLowerCase","includes"],"mappings":"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","sourcesContent":["import React, { useState, useEffect} from 'react'\nimport axios from 'axios'\n\n\n\nconst Countries = ({ countries, setNewFilter }) => {\n\n  const Country = ({ country, singleCountry, setNewFilter }) => {\n\n    const filterCountries = ({ country }) => {\n      console.log('Country:', country)\n      setNewFilter(country.name)\n      console.log('Filter set to', country.name)\n    }\n\n    if (singleCountry) {\n      return (\n        <div>\n          <h1>{country.name}</h1>\n\n          <p>\n            Capital: {country.capital}\n            <br></br>\n            Population: {country.population}\n          </p>\n\n          <h2>Languages</h2>\n          <ul>\n            {country.languages.map(language => \n              <li key={language.name}>{language.name}</li>)}\n          </ul>\n          <img \n          src={country.flag} \n          alt=\"Country's flag\"\n          width='170'\n          ></img>\n        </div>\n      )\n    } else {\n      return (\n    <div>\n      {country.name}\n\n      <input\n      type='button'\n      name={country.name}\n      value='Show'\n      onClick={() => \n        console.log('Button pressed.', country.name) || filterCountries(country)}/>\n    </div>\n      )\n    }\n    \n  }\n\n\n  if (countries.length > 10) {\n    return (\n      <div>\n        Too many matches, specify another filter.\n      </div>\n    )\n  } else if (countries.length === 1) {\n    return (\n      <>\n        {countries.map(country => \n          <Country \n          country={country} \n          key={country.name} \n          singleCountry={true}\n          setNewFilter={setNewFilter}/>)\n        }\n      </>\n    )\n  } else {\n    return (\n      <div>\n        {countries.map(country => \n          <Country \n          country={country} \n          key={country.name}\n          singeCountry={false} />)\n        }\n      </div>\n    )\n  }\n  \n  \n} \n\n\nconst App = () => {\n\n  const [ countries, setCountries ] = useState([])\n  const [ newFilter, setNewFilter ] = useState('')\n  const [ showAll, setShowAll ] = useState(true)\n\n  useEffect(() => {\n    console.log('Pending...')\n\n    axios\n      .get('https://restcountries.eu/rest/v2/all')\n      .then(response => {\n        setCountries(response.data)\n        console.log('Promise fulfilled!')\n      })\n  }, [])\n\n  console.log('Rendering', countries.length, 'countries.')\n\n  const handleFilter = (event) => {\n    console.log('Event:', event.target.value)\n    setNewFilter(event.target.value)\n\n    if (newFilter !== '') {\n      setShowAll(false)\n    }\n    \n    \n  }\n\n  const filteredCountries = showAll \n    ? countries \n    : countries.filter(country => country.name.toLowerCase().includes(newFilter.toLowerCase()))\n\n\n  return (\n    <div>\n      Find countries: \n      <input \n      value={newFilter}\n      onChange={handleFilter}\n      />\n\n      <Countries countries={filteredCountries} setNewFilter={setNewFilter}/>\n      \n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}