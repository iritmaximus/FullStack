{"ast":null,"code":"var _jsxFileName = \"/home/martti/Documents/FullStack/osa2/osa2_react/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Note from './components/Note';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = props => {\n  _s();\n\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState('A new note...');\n  const [showAll, setShowAll] = useState(true);\n  useEffect(() => {\n    console.log('effect');\n    axios.get('http://localhost:3001/notes').then(response => {\n      console.log('promise fulfilled');\n      setNotes(response.data);\n    });\n  }, []);\n  console.log('render', notes.length, 'notes');\n  console.log('Render', notes.length, 'notes.');\n\n  const addNote = event => {\n    event.preventDefault();\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5\n    };\n    axios.post('http://localhost:3001/notes', noteObject).then(response => {\n      setNotes(notes.concat(response.data));\n      setNewNote('');\n      console.log(response);\n    });\n  };\n\n  const toggleImportanceOf = id => {\n    console.log('Importance of', id, 'needs to be toggled.');\n    const url = `http://localhost:3001/notes/${id}`;\n    const note = notes.find(n => n.id === id);\n    const changedNote = { ...note,\n      important: !note.important\n    };\n    axios.put(url, changedNote).then(response => {\n      setNotes(notes.map(note => note.id !== id ? note : response.data));\n    });\n  };\n\n  const handleNoteChange = event => {\n    console.log(event.target.value);\n    setNewNote(event.target.value);\n  };\n\n  const notesToShow = showAll ? notes : notes.filter(note => note.important === true);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Notes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowAll(!showAll),\n        children: [\"Show \", showAll ? 'important' : 'all']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: notesToShow.map(note => /*#__PURE__*/_jsxDEV(Note, {\n          note: note,\n          toggleImportance: () => toggleImportanceOf(note.id)\n        }, note.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this))\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addNote,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: newNote,\n        onChange: handleNoteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"JRNMa7XlzhNmlubM2gxwbqOaXto=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/martti/Documents/FullStack/osa2/osa2_react/src/App.js"],"names":["React","useEffect","useState","Note","axios","App","props","notes","setNotes","newNote","setNewNote","showAll","setShowAll","console","log","get","then","response","data","length","addNote","event","preventDefault","noteObject","content","date","Date","toISOString","important","Math","random","post","concat","toggleImportanceOf","id","url","note","find","n","changedNote","put","map","handleNoteChange","target","value","notesToShow","filter"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport Note from './components/Note'\nimport axios from 'axios'\n\nconst App = (props) => {  \n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState('A new note...')\n  const [showAll, setShowAll] = useState(true)\n\n\n  useEffect(() => {\n    console.log('effect')\n    axios\n      .get('http://localhost:3001/notes')\n      .then(response => {\n        console.log('promise fulfilled')\n        setNotes(response.data)\n      })\n  }, [])\n  console.log('render', notes.length, 'notes')\n  \n  \n  console.log('Render', notes.length, 'notes.')\n  \n  const addNote = event => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5,\n    }\n\n    axios    \n      .post('http://localhost:3001/notes', noteObject)    \n      .then(response => {\n        setNotes(notes.concat(response.data))\n        setNewNote('')\n        console.log(response)\n      }\n  )}   \n      \n  \n\n  const toggleImportanceOf = (id) => {\n    console.log('Importance of', id, 'needs to be toggled.')\n    const url = `http://localhost:3001/notes/${id}`\n    const note = notes.find(n => n.id === id)\n    const changedNote = { ...note, important: !note.important }\n\n    axios.put(url, changedNote).then(response => {\n      setNotes(notes.map(note => note.id !== id ? note : response.data))\n    })\n  }\n  \n  \n\n   \n\n  const handleNoteChange = (event) => {\n    console.log(event.target.value)\n    setNewNote(event.target.value)\n  }\n\n  const notesToShow = showAll\n    ? notes\n    : notes.filter(note => note.important === true)\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          Show {showAll ? 'important' : 'all'}\n        </button>\n      </div>\n      <ul>\n        <>\n          {notesToShow.map(note => \n            <Note \n            key={note.id} \n            note={note} \n            toggleImportance={() => toggleImportanceOf(note.id)}/>\n          )}\n        </>\n      </ul>\n      <form onSubmit={addNote}>\n        <input \n        value={newNote}\n        onChange={handleNoteChange}\n        />\n        <button type='submit'>Save</button>\n      </form>\n    </div>\n  )\n}\n\nexport default App "]},"metadata":{},"sourceType":"module"}