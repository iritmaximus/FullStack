{"ast":null,"code":"var _jsxFileName = \"/home/martti/Documents/FullStack/osa2/osa2_react/src/App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst api_key = process.env.REACT_APP_API_KEY;\n\nconst Country = ({\n  country,\n  singleCountry,\n  setNewFilter\n}) => {\n  _s();\n\n  const [weather, setWeather] = useState([]);\n  useEffect(() => {\n    console.log('Weather pending...');\n    axios.get(`http://api.weatherapi.com/v1/forecast.json?key=${api_key}&q=${country.name}&days=1&aqi=no&alerts=no`).then(response => {\n      setWeather(response.data);\n    });\n  }, [country.name]);\n  console.log('Rendering weather of:', country.name, weather);\n  console.log('Weather condition:', weather.location);\n\n  if (singleCountry) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: country.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Capital: \", country.capital, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), \"Population: \", country.population]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Spoken languages\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: country.languages.map(language => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: language.name\n        }, language.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: country.flag,\n        alt: \"Country's flag\",\n        width: \"170\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Weather in P\\xF6ps\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [country.name, /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        name: country.name,\n        value: \"Show\",\n        onClick: () => console.log('Button pressed.', country.name) || setNewFilter(country.name)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 3\n    }, this);\n  }\n};\n\n_s(Country, \"SMF3aL92g+MZnlV0co6TJpP7QFc=\");\n\n_c = Country;\n\nconst Countries = ({\n  countries,\n  setNewFilter\n}) => {\n  if (countries.length > 10) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Too many matches, specify another filter.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this);\n  } else if (countries.length === 1) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: countries.map(country => /*#__PURE__*/_jsxDEV(Country, {\n        country: country,\n        singleCountry: true,\n        setNewFilter: setNewFilter\n      }, country.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this))\n    }, void 0, false);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: countries.map(country => /*#__PURE__*/_jsxDEV(Country, {\n        country: country,\n        singeCountry: false,\n        setNewFilter: setNewFilter\n      }, country.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_c2 = Countries;\n\nconst App = () => {\n  _s2();\n\n  const [countries, setCountries] = useState([]);\n  const [newFilter, setNewFilter] = useState('');\n  const [showAll, setShowAll] = useState(true);\n  useEffect(() => {\n    console.log('Countries pending...');\n    axios.get('https://restcountries.eu/rest/v2/all').then(response => {\n      setCountries(response.data);\n      console.log('Promise fulfilled!');\n    });\n  }, []);\n  console.log('Rendering', countries.length, 'countries.');\n\n  const handleFilter = event => {\n    console.log('Event:', event.target.value);\n    setNewFilter(event.target.value);\n\n    if (newFilter !== '') {\n      setShowAll(false);\n    }\n  };\n\n  const filteredCountries = showAll ? countries : countries.filter(country => country.name.toLowerCase().includes(newFilter.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Find countries:\", /*#__PURE__*/_jsxDEV(\"input\", {\n      value: newFilter,\n      onChange: handleFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Countries, {\n      countries: filteredCountries,\n      setNewFilter: setNewFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(App, \"YrxbITqMnqu9jzXz0Lbje9HrKO8=\");\n\n_c3 = App;\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Country\");\n$RefreshReg$(_c2, \"Countries\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"sources":["/home/martti/Documents/FullStack/osa2/osa2_react/src/App.js"],"names":["React","useState","useEffect","axios","api_key","process","env","REACT_APP_API_KEY","Country","country","singleCountry","setNewFilter","weather","setWeather","console","log","get","name","then","response","data","location","capital","population","languages","map","language","flag","Countries","countries","length","App","setCountries","newFilter","showAll","setShowAll","handleFilter","event","target","value","filteredCountries","filter","toLowerCase","includes"],"mappings":"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","sourcesContent":["import React, { useState, useEffect} from 'react'\nimport axios from 'axios'\n\nconst api_key = process.env.REACT_APP_API_KEY\n\n\n\nconst Country = ({ country, singleCountry, setNewFilter }) => {\n\n  const [ weather, setWeather ] = useState([])\n\n  useEffect(() => {\n    console.log('Weather pending...')\n\n    axios\n      .get(`http://api.weatherapi.com/v1/forecast.json?key=${api_key}&q=${country.name}&days=1&aqi=no&alerts=no`)\n      .then(response => {\n        setWeather(response.data)\n      })\n  }, [country.name])\n\n  console.log('Rendering weather of:', country.name, weather)\n  console.log('Weather condition:', weather.location)\n\n  if (singleCountry) {\n    return (\n      <div>\n        <h1>{country.name}</h1>\n\n        <p>\n          Capital: {country.capital}\n          <br></br>\n          Population: {country.population}\n        </p>\n\n        <h2>Spoken languages</h2>\n        <ul>\n          {country.languages.map(language => \n            <li key={language.name}>{language.name}</li>)}\n        </ul>\n        <img \n        src={country.flag} \n        alt=\"Country's flag\"\n        width='170'\n        ></img>\n        \n        <h2>Weather in Pöps</h2>\n      </div>\n    )\n  } else {\n    return (\n  <div>\n    {country.name}\n\n    <input\n    type='button'\n    name={country.name}\n    value='Show'\n    onClick={() => \n      console.log('Button pressed.', country.name) \n      || setNewFilter(country.name)}/>\n  </div>\n    )\n  }\n}\n\n\nconst Countries = ({ countries, setNewFilter }) => {\n\n  if (countries.length > 10) {\n    return (\n      <div>\n        Too many matches, specify another filter.\n      </div>\n    )\n  } else if (countries.length === 1) {\n    return (\n      <>\n        {countries.map(country => \n          <Country \n          country={country} \n          key={country.name} \n          singleCountry={true}\n          setNewFilter={setNewFilter}\n          />)\n        }\n      </>\n    )\n  } else {\n    return (\n      <div>\n        {countries.map(country => \n          <Country \n          country={country} \n          key={country.name}\n          singeCountry={false} \n          setNewFilter={setNewFilter}/>)\n        }\n      </div>\n    )\n  }\n} \n\n\n\n\n\nconst App = () => {\n\n\n  const [ countries, setCountries ] = useState([])\n\n  const [ newFilter, setNewFilter ] = useState('')\n  const [ showAll, setShowAll ] = useState(true)\n\n  useEffect(() => {\n    console.log('Countries pending...')\n\n    axios\n      .get('https://restcountries.eu/rest/v2/all')\n      .then(response => {\n        setCountries(response.data)\n        console.log('Promise fulfilled!')\n      })\n  }, [])\n\n  console.log('Rendering', countries.length, 'countries.')\n\n  const handleFilter = (event) => {\n    console.log('Event:', event.target.value)\n    setNewFilter(event.target.value)\n\n    if (newFilter !== '') {\n      setShowAll(false)\n    }\n    \n    \n  }\n\n  const filteredCountries = showAll \n    ? countries \n    : countries.filter(country => country.name.toLowerCase().includes(newFilter.toLowerCase()))\n\n\n  return (\n    <div>\n      Find countries: \n      <input \n      value={newFilter}\n      onChange={handleFilter}\n      />\n\n      <Countries countries={filteredCountries} setNewFilter={setNewFilter}/>\n      \n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}