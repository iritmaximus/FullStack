{"ast":null,"code":"var _jsxFileName = \"/home/martti/Documents/FullStack/osa2/osa2_react/src/App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst api_key = process.env.REACT_APP_API_KEY;\n\nconst Weather = ({\n  country\n}) => {\n  _s();\n\n  const [weather, setWeather] = useState([]);\n  const [showWeather, setShowWeather] = useState(false);\n  useEffect(() => {\n    console.log('Weather pending...');\n    axios.get(`http://api.weatherapi.com/v1/current.json?key=${api_key}&q=${country.name}&aqi=no`).then(response => {\n      setWeather(response.data);\n      setShowWeather(true);\n      console.log('Show yourself... pls');\n    });\n  }, [country.name]);\n  console.log('Rendering weather of', country.name, weather);\n\n  if (showWeather) {\n    console.log('Weather:', weather);\n    console.log('Icon:', weather.current.condition.icon);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Weather in \", weather.location.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Temperature:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), \" \", weather.current.temp_c, \" Celsius\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        scr: weather.current.condition.icon,\n        alt: weather.current.condition.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Wind:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), \" \", weather.current.wind_mph, \" mph in the direction \", weather.current.wind_dir]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this);\n  } else {\n    console.log('Weather loading... aka !showWeather');\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Weather loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_s(Weather, \"4HfUYEK5xcwNRQVbfO+TY3w/6Xc=\");\n\n_c = Weather;\n\nconst Country = ({\n  country,\n  singleCountry,\n  setNewFilter\n}) => {\n  if (singleCountry) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: country.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Capital: \", country.capital, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), \"Population: \", country.population]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Spoken languages\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: country.languages.map(language => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: language.name\n        }, language.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: country.flag,\n        alt: \"Country's flag\",\n        width: \"170\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Weather, {\n        country: country\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [country.name, /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        name: country.name,\n        value: \"Show\",\n        onClick: () => console.log('Button pressed and filter set to ', country.name) || setNewFilter(country.name)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 3\n    }, this);\n  }\n};\n\n_c2 = Country;\n\nconst Countries = ({\n  countries,\n  setNewFilter\n}) => {\n  if (countries.length > 10) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Too many matches, specify another filter.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this);\n  } else if (countries.length === 1) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: countries.map(country => /*#__PURE__*/_jsxDEV(Country, {\n        country: country,\n        singleCountry: true,\n        setNewFilter: setNewFilter\n      }, country.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this))\n    }, void 0, false);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: countries.map(country => /*#__PURE__*/_jsxDEV(Country, {\n        country: country,\n        singeCountry: false,\n        setNewFilter: setNewFilter\n      }, country.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_c3 = Countries;\n\nconst App = () => {\n  _s2();\n\n  const [countries, setCountries] = useState([]);\n  const [newFilter, setNewFilter] = useState('');\n  const [showAll, setShowAll] = useState(true);\n  useEffect(() => {\n    axios.get('https://restcountries.eu/rest/v2/all').then(response => {\n      setCountries(response.data);\n      console.log('Promise fulfilled!');\n    });\n  }, []);\n\n  const handleFilter = event => {\n    console.log('Event:', event.target.value);\n    setNewFilter(event.target.value);\n\n    if (newFilter !== '') {\n      setShowAll(false);\n    }\n  };\n\n  const filteredCountries = showAll ? countries : countries.filter(country => country.name.toLowerCase().includes(newFilter.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Find countries:\", /*#__PURE__*/_jsxDEV(\"input\", {\n      value: newFilter,\n      onChange: handleFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Countries, {\n      countries: filteredCountries,\n      setNewFilter: setNewFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(App, \"YrxbITqMnqu9jzXz0Lbje9HrKO8=\");\n\n_c4 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Weather\");\n$RefreshReg$(_c2, \"Country\");\n$RefreshReg$(_c3, \"Countries\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"sources":["/home/martti/Documents/FullStack/osa2/osa2_react/src/App.js"],"names":["React","useState","useEffect","axios","api_key","process","env","REACT_APP_API_KEY","Weather","country","weather","setWeather","showWeather","setShowWeather","console","log","get","name","then","response","data","current","condition","icon","location","temp_c","text","wind_mph","wind_dir","Country","singleCountry","setNewFilter","capital","population","languages","map","language","flag","Countries","countries","length","App","setCountries","newFilter","showAll","setShowAll","handleFilter","event","target","value","filteredCountries","filter","toLowerCase","includes"],"mappings":"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","sourcesContent":["import React, { useState, useEffect} from 'react'\nimport axios from 'axios'\n\nconst api_key = process.env.REACT_APP_API_KEY\n\n\nconst Weather = ({ country }) => {\n  \n  const [ weather, setWeather ] = useState([])\n  const [ showWeather, setShowWeather ] = useState(false)\n\n  useEffect(() => {\n    console.log('Weather pending...')\n\n    \n    axios\n      .get(`http://api.weatherapi.com/v1/current.json?key=${api_key}&q=${country.name}&aqi=no`)\n      .then(response => {\n        setWeather(response.data)\n        setShowWeather(true)\n        console.log('Show yourself... pls')\n\n      })\n  }, [country.name])\n\n  console.log('Rendering weather of', country.name, weather)\n\n\n\n  if (showWeather) {\n    console.log('Weather:', weather)\n    console.log('Icon:', weather.current.condition.icon)\n    return (\n      <div>\n        <h2>Weather in {weather.location.name}</h2>\n        <br></br>\n        <strong>Temperature:</strong> {weather.current.temp_c} Celsius\n        <br></br>\n\n        <img scr={weather.current.condition.icon} alt={weather.current.condition.text}></img>\n        <br></br>\n        <strong>Wind:</strong> {weather.current.wind_mph} mph in the direction {weather.current.wind_dir}\n      </div>\n    )\n  } else {\n    console.log('Weather loading... aka !showWeather')\n    return (\n      <h2>Weather loading...</h2>\n    )\n  }\n}\n\nconst Country = ({ country, singleCountry, setNewFilter }) => {\n\n\n  if (singleCountry) {\n    return (\n      <div>\n        <h1>{country.name}</h1>\n\n        <p>\n          Capital: {country.capital}\n          <br></br>\n          Population: {country.population}\n        </p>\n\n        <h2>Spoken languages</h2>\n        <ul>\n          {country.languages.map(language => \n            <li key={language.name}>{language.name}</li>)}\n        </ul>\n        <img \n        src={country.flag} \n        alt=\"Country's flag\"\n        width='170'\n        ></img>\n        <Weather country={country} />\n        \n      </div>\n    )\n  } else {\n    return (\n  <div>\n    {country.name}\n\n    <input\n    type='button'\n    name={country.name}\n    value='Show'\n    onClick={() => \n      console.log('Button pressed and filter set to ', country.name) \n      || setNewFilter(country.name)}/>\n  </div>\n    )\n  }\n}\n\n\nconst Countries = ({ countries, setNewFilter }) => {\n\n  if (countries.length > 10) {\n    return (\n      <div>\n        Too many matches, specify another filter.\n      </div>\n    )\n  } else if (countries.length === 1) {\n    return (\n      <>\n        {countries.map(country => \n          <Country \n          country={country} \n          key={country.name} \n          singleCountry={true}\n          setNewFilter={setNewFilter}\n          />)\n        }\n      </>\n    )\n  } else {\n    return (\n      <div>\n        {countries.map(country => \n          <Country \n          country={country} \n          key={country.name}\n          singeCountry={false} \n          setNewFilter={setNewFilter}/>)\n        }\n      </div>\n    )\n  }\n} \n\n\n\n\n\nconst App = () => {\n\n\n  const [ countries, setCountries ] = useState([])\n\n  const [ newFilter, setNewFilter ] = useState('')\n  const [ showAll, setShowAll ] = useState(true)\n\n  useEffect(() => {\n\n    axios\n      .get('https://restcountries.eu/rest/v2/all')\n      .then(response => {\n        setCountries(response.data)\n        console.log('Promise fulfilled!')\n      })\n  }, [])\n\n  const handleFilter = (event) => {\n    console.log('Event:', event.target.value)\n    setNewFilter(event.target.value)\n\n    if (newFilter !== '') {\n      setShowAll(false)\n    }\n    \n    \n  }\n\n  const filteredCountries = showAll \n    ? countries \n    : countries.filter(country => country.name.toLowerCase().includes(newFilter.toLowerCase()))\n\n\n  return (\n    <div>\n      Find countries: \n      <input \n      value={newFilter}\n      onChange={handleFilter}\n      />\n      <Countries countries={filteredCountries} setNewFilter={setNewFilter}/>\n      \n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}