{"ast":null,"code":"var _jsxFileName = \"/home/martti/Documents/FullStack/osa2/osa2_react/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Note from './components/Note';\nimport noteService from './services/notes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Notification = ({\n  message\n}) => {\n  if (message === null) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error\",\n    children: message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Notification;\n\nconst Footer = () => {\n  const footerStyle = {\n    color: 'green',\n    fontStyle: 'italic',\n    fontSize: 16\n  };\n};\n\n_c2 = Footer;\n\nconst App = props => {\n  _s();\n\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState('A new note...');\n  const [showAll, setShowAll] = useState(true);\n  const [errorMessage, setErrorMessage] = useState(null);\n  useEffect(() => {\n    noteService.getAll().then(initialNotes => {\n      setNotes(initialNotes);\n    });\n  }, []);\n  console.log('Render', notes.length, 'notes.');\n\n  const addNote = event => {\n    event.preventDefault();\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5\n    };\n    noteService.create(noteObject).then(returnedNote => {\n      setNotes(notes.concat(returnedNote));\n      setNewNote('');\n    });\n  };\n\n  const toggleImportanceOf = id => {\n    console.log('Importance of', id, 'needs to be toggled.');\n    const note = notes.find(n => n.id === id);\n    const changedNote = { ...note,\n      important: !note.important\n    };\n    noteService.update(id, changedNote).then(returnedNote => {\n      setNotes(notes.map(note => note.id !== id ? note : returnedNote));\n    }).catch(error => {\n      setErrorMessage(`Note ${note.content} was already removed from the server`);\n      setTimeout(() => {\n        setErrorMessage(null);\n      }, 5000);\n      setNotes(notes.filter(n => n.id !== id));\n    });\n  };\n\n  const handleNoteChange = event => {\n    console.log(event.target.value);\n    setNewNote(event.target.value);\n  };\n\n  const notesToShow = showAll ? notes : notes.filter(note => note.important === true);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Notes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Notification, {\n      message: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowAll(!showAll),\n        children: [\"Show \", showAll ? 'important' : 'all']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: notesToShow.map(note => /*#__PURE__*/_jsxDEV(Note, {\n          note: note,\n          toggleImportance: () => toggleImportanceOf(note.id)\n        }, note.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this))\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addNote,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: newNote,\n        onChange: handleNoteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"ENfpfT6IIDvF52nLJBH5/becYO4=\");\n\n_c3 = App;\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Notification\");\n$RefreshReg$(_c2, \"Footer\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"sources":["/home/martti/Documents/FullStack/osa2/osa2_react/src/App.js"],"names":["React","useEffect","useState","Note","noteService","Notification","message","Footer","footerStyle","color","fontStyle","fontSize","App","props","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","getAll","then","initialNotes","console","log","length","addNote","event","preventDefault","noteObject","content","date","Date","toISOString","important","Math","random","create","returnedNote","concat","toggleImportanceOf","id","note","find","n","changedNote","update","map","catch","error","setTimeout","filter","handleNoteChange","target","value","notesToShow"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport Note from './components/Note'\nimport noteService from './services/notes'\n\n\nconst Notification =  ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className='error'>\n      {message}\n    </div>\n  )\n}\n\nconst Footer = () => {\n  const footerStyle = {\n    color: 'green',\n    fontStyle: 'italic',\n    fontSize: 16\n  }\n}\n\nconst App = (props) => {  \n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState('A new note...')\n  const [showAll, setShowAll] = useState(true)\n  const [errorMessage, setErrorMessage ] = useState(null)\n\n\n  useEffect(() => {\n    noteService\n      .getAll()\n      .then(initialNotes => {\n        setNotes(initialNotes)\n      })\n  }, [])  \n  \n  console.log('Render', notes.length, 'notes.')\n  \n  const addNote = event => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5,\n    }\n\n   noteService \n    .create(noteObject)\n    .then(returnedNote => {\n      setNotes(notes.concat(returnedNote))\n      setNewNote('')\n    })\n  } \n      \n  \n\n  const toggleImportanceOf = (id) => {\n    console.log('Importance of', id, 'needs to be toggled.')\n    const note = notes.find(n => n.id === id)\n    const changedNote = { ...note, important: !note.important }\n\n    noteService\n      .update(id, changedNote)\n      .then(returnedNote => {\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n      })\n      .catch(error => {\n        setErrorMessage(\n          `Note ${note.content} was already removed from the server`\n        )\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n        setNotes(notes.filter(n => n.id !== id))\n      })\n  }\n  \n  \n\n   \n\n  const handleNoteChange = (event) => {\n    console.log(event.target.value)\n    setNewNote(event.target.value)\n  }\n\n  const notesToShow = showAll\n    ? notes\n    : notes.filter(note => note.important === true)\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      < Notification message={errorMessage}/> \n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          Show {showAll ? 'important' : 'all'}\n        </button>\n      </div>\n      <ul>\n        <>\n          {notesToShow.map(note => \n            <Note \n            key={note.id} \n            note={note} \n            toggleImportance={() => toggleImportanceOf(note.id)}/>\n          )}\n        </>\n      </ul>\n      <form onSubmit={addNote}>\n        <input \n        value={newNote}\n        onChange={handleNoteChange}\n        />\n        <button type='submit'>Save</button>\n      </form>\n    </div>\n  )\n}\n\nexport default App "]},"metadata":{},"sourceType":"module"}